<UserControl x:Class="ManiaX.Beacons.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:datavis="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit" 
             xmlns:charting="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit" 
             xmlns:valueConverters="clr-namespace:ManiaX.Beacons.ValueConverters" 
             xmlns:Views="clr-namespace:ManiaX.Test.Beacons.Views" xmlns:WpfGauge="clr-namespace:WpfGauge;assembly=WpfGauge" 
             xmlns:DataStructs="clr-namespace:ManiaX.Beacons.DataStructs" 
             xmlns:chartingprimitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit" xmlns:ViewModels="clr-namespace:ManiaX.Beacons.ViewModels" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="toggleVisibility"/>

        <valueConverters:RphGaugeMaxScaleToMajorTicksConverter x:Key="majorTicksCalculator"/>
        <valueConverters:RunsPerHourToColorConverter x:Key="rphToColorConverter" />
    </UserControl.Resources>

    <DockPanel>

        <DockPanel DockPanel.Dock="Top">
            <ToggleButton DockPanel.Dock="Right" Height="42" Width="42" Padding="5"
                                                 Style="{DynamicResource togglePauseImagesStyle}"
                                                 IsChecked="{Binding IsPaused, Mode=OneWay}"
                                                 Command="{Binding TogglePauseCommand}" 
                                                 ToolTip="{Binding TogglePauseTooltip}"/>

            <Expander Header="Test Runner Configuration" DataContext="{Binding TestRunnerConfigVM}">
                <AdornerDecorator>
                    <StackPanel Margin="10,0">
                        <ComboBox ItemsSource="{Binding RunnerTypes}"
                                  DisplayMemberPath="Description"
                                  SelectedValuePath="Id"
                                  SelectedValue="{Binding SelectedRunnerType}"/>
                        <Label Target="{Binding ElementName=ConfigArguments}" 
                               Content="{Binding ConfigArgumentsDescription}" 
                               VerticalContentAlignment="Bottom"/>
                        <ComboBox x:Name="ConfigArguments" Margin="0,0,0,15"
                                  Text="{Binding Path=ConfigArguments, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}"
                                  ItemsSource="{Binding MRUPaths}"
                                  IsEditable="True"
                                  Validation.ErrorTemplate="{DynamicResource validationTemplate}" />
                    </StackPanel>
                </AdornerDecorator>
            </Expander>
        </DockPanel>
        <TabControl MinHeight="250" >
            <TabControl.Items>
                <TabItem x:Name="_tddRhythmBeaconView" Header="TDD Rhythm" DataContext="{Binding TDDRhythmBeaconVM}">
                    <TabItem.Resources>
                        <DataTemplate DataType="{x:Type DataStructs:TestRun}">
                            <Views:TextInAShape Text="{Binding TestCount}" Style="{DynamicResource TestResultShape}" 
                                                ToolTip="{Binding Note}"
                                                FontSize="11" >
                            </Views:TextInAShape>
                        </DataTemplate>
                    </TabItem.Resources>
                    <Grid Margin="0,0,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*" MinHeight="35"/>
                            <RowDefinition Height="Auto" />
                        	<RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>

                        <ToolBarTray Grid.Row="0" Background="Transparent" IsLocked="True">
                            <ToolBar Background="AliceBlue">
                                <ToggleButton Height="32" Width="32"  Padding="3 0" Style="{DynamicResource toggleHatImagesStyle}"
                
                                              IsChecked="{Binding IsRefactoringHatOn, Mode=OneWay}"
                                              Command="{Binding ToggleRefactoringHat}" ToolTip="{x:Static ViewModels:TDDRhythmBeacon.ChangeHatsTooltip}" />
                            </ToolBar>
                        </ToolBarTray>

                        <StackPanel Grid.Row="0" Grid.Column="1" 
                                    HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                            <TextBlock FontSize="16" FontWeight="DemiBold"
                                   Text="{Binding RunsPerHour}" 
                                   TextWrapping="Wrap" TextAlignment="Right" Padding="10,0"
                                   Background="Black"
                                   Foreground="{Binding RunsPerHour, Converter={StaticResource rphToColorConverter}}"/>
                            <TextBlock VerticalAlignment="Bottom" FontSize="16" Margin="10,0,0,0" > Runs / hour</TextBlock>
                        </StackPanel>
                        
                        


                        <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Bottom"
                               Content="Ann_otate Test Run" Target="{Binding ElementName=cboNote}"/>
                        <ComboBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom"
                                  x:Name="cboNote" MinWidth="100"
                                  ItemsSource="{Binding MruNotes}" Text="{Binding NoteForSelectedTestRun, UpdateSourceTrigger=LostFocus}" 
                                  IsEditable="True" Margin="5,0">
                            <ComboBox.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedTestRun}" Value="{x:Null}">
                                            <Setter Property="Control.IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>

                        <ListBox Grid.Row="2" Grid.ColumnSpan="2"
                                 ItemsSource="{Binding TestResultsStack}" SelectedItem="{Binding SelectedTestRun}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="PowderBlue"/>
                                    </Style.Resources>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                        
                        <GridSplitter Grid.Row="3" Grid.ColumnSpan="2" Height="5"
                                      HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext"/>
                        
                        <ListBox Grid.Row="4" Grid.ColumnSpan="2"
                                 HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Grid}, Mode=FindAncestor}}"
                                 ItemsSource="{Binding SelectedTestRun.Failures}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <StackPanel.Background>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="LightCoral" Offset="0"/>
                                                <GradientStop Color="Transparent" Offset="1"/>
                                            </LinearGradientBrush>
                                        </StackPanel.Background>
                                        <TextBlock Text="{Binding TestName, StringFormat=\{0\} failed!}" 
                                                   FontWeight="UltraBold" TextAlignment="Center" 
                                                   TextWrapping="Wrap"/>
                                        <TextBlock Text="{Binding Message}" TextWrapping="Wrap" MaxHeight="100"/>
                                        <Expander IsExpanded="{Binding StackTraceExpanded}" Header="Stack Trace">
                                            <ScrollViewer MaxHeight="100">
                                                <TextBlock TextWrapping="Wrap" FontSize="10" Text="{Binding StackTrace}"/>
                                            </ScrollViewer>
                                        </Expander>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </TabItem>

                <TabItem x:Name="_stateBeaconView"  DataContext="{Binding StateBeaconVM}">
                    <TabItem.Header>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom">
                            <Ellipse Width="12" Height="12" 
                                     Stroke="Black" StrokeThickness="1"
                                     Fill="{Binding Path=CurrentState,Converter={valueConverters:CodebaseStateToBrushConverter}}"
                                     Margin="5, 0"/>
                            <TextBlock>States</TextBlock>
                            <Ellipse Style="{DynamicResource warningIcons}"
                                     Visibility="{Binding InBrokenBuildsRut, Converter={StaticResource toggleVisibility}}"
                                     ToolTip="{x:Static ViewModels:StateBeacon.EnteredBrokenBuildsRutAdvisory}">
                                <Ellipse.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard Name="brokenBuildsRut">
                                            <Storyboard>
                                                <ColorAnimation 
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="Tomato" Duration="0:0:0.5"
                                                        AutoReverse="True" RepeatBehavior="Forever"
                                                        AccelerationRatio="0.2" DecelerationRatio="0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Unloaded">
                                        <StopStoryboard BeginStoryboardName="brokenBuildsRut"/>
                                    </EventTrigger>
                                </Ellipse.Triggers>
                            </Ellipse>
                            <Ellipse Style="{DynamicResource warningIcons}"
                                     Visibility="{Binding InBrokenTestsRut, Converter={StaticResource toggleVisibility}}"
                                     ToolTip="{x:Static ViewModels:StateBeacon.EnteredBrokenTestsRutAdvisory}">
                                <Ellipse.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard Name="brokenTestsRut">
                                            <Storyboard>
                                                <ColorAnimation 
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="Red" Duration="0:0:0.5"
                                                        AutoReverse="True" RepeatBehavior="Forever"
                                                        AccelerationRatio="0.2" DecelerationRatio="0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Unloaded">
                                        <StopStoryboard BeginStoryboardName="brokenTestsRut"/>
                                    </EventTrigger>
                                </Ellipse.Triggers>
                            </Ellipse>

                        </StackPanel>
                    </TabItem.Header>
                    <DockPanel>

                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="15, 10">
                            <TextBlock Grid.Row="0" Grid.Column="0">In</TextBlock>
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding CurrentState}" Margin="5,0" Foreground="Maroon" />
                            <TextBlock Grid.Row="1" Grid.Column="0"> state since</TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding ElapsedTimeInCurrentState}" Margin="5,0" Foreground="Maroon" />
                        </StackPanel>
                        <charting:Chart Title="State Distribution Trend">
                            <charting:Chart.Resources>
                                <SolidColorBrush x:Key="CompilingBrush" Color="{x:Static Colors.LemonChiffon}"/>
                                <SolidColorBrush x:Key="NoCompileErrorsBrush" Color="{x:Static Colors.PowderBlue}"/>
                                <SolidColorBrush x:Key="CompileErrorsBrush" Color="{x:Static Colors.Tomato}"/>
                                <SolidColorBrush x:Key="RedBrush" Color="{x:Static Colors.Red}"/>
                                <SolidColorBrush x:Key="GreenBrush" Color="{x:Static Colors.Lime}"/>
                                <Style x:Key="CompilingDPStyle" TargetType="charting:DataPoint">
                                    <Setter Property="Background" Value="{StaticResource CompilingBrush}"/>
                                </Style>
                                <Style x:Key="CompilingDSStyle" TargetType="Shape">
                                    <Setter Property="Stroke" Value="{StaticResource CompilingBrush}"/>
                                    <Setter Property="Fill" Value="{StaticResource CompilingBrush}"/>
                                </Style>
                                <Style x:Key="NoCompileErrorsDPStyle" TargetType="charting:DataPoint">
                                    <Setter Property="Background" Value="{StaticResource NoCompileErrorsBrush}"/>
                                </Style>
                                <Style x:Key="NoCompileErrorsDSStyle" TargetType="Shape">
                                    <Setter Property="Stroke" Value="{StaticResource NoCompileErrorsBrush}"/>
                                    <Setter Property="Fill" Value="{StaticResource NoCompileErrorsBrush}"/>
                                </Style>
                                <Style x:Key="CompileErrorsDPStyle" TargetType="charting:DataPoint">
                                    <Setter Property="Background" Value="{StaticResource CompileErrorsBrush}"/>
                                </Style>
                                <Style x:Key="CompileErrorsDSStyle" TargetType="Shape">
                                    <Setter Property="Stroke" Value="{StaticResource CompileErrorsBrush}"/>
                                    <Setter Property="Fill" Value="{StaticResource CompileErrorsBrush}"/>
                                </Style>
                                <Style x:Key="RedDPStyle" TargetType="charting:DataPoint">
                                    <Setter Property="Background" Value="{StaticResource RedBrush}"/>
                                </Style>
                                <Style x:Key="RedDSStyle" TargetType="Shape">
                                    <Setter Property="Stroke" Value="{StaticResource RedBrush}"/>
                                    <Setter Property="Fill" Value="{StaticResource RedBrush}"/>
                                </Style>
                                <Style x:Key="GreenDPStyle" TargetType="charting:DataPoint">
                                    <Setter Property="Background" Value="{StaticResource GreenBrush}"/>
                                </Style>
                                <Style x:Key="GreenDSStyle" TargetType="Shape">
                                    <Setter Property="Stroke" Value="{StaticResource GreenBrush}"/>
                                    <Setter Property="Fill" Value="{StaticResource GreenBrush}"/>
                                </Style>

                            </charting:Chart.Resources>
                            <!-- modded from WPF Toolkit source DataVisualization\Themes\generic.xaml -->
                            <charting:Chart.Template>
                                <ControlTemplate TargetType="charting:Chart">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ToolTip>
                                                <datavis:Legend x:Name="Legend" Header="{TemplateBinding LegendTitle}" Style="{TemplateBinding LegendStyle}" />
                                            </Grid.ToolTip>
                                            <datavis:Title Content="{TemplateBinding Title}" Style="{TemplateBinding TitleStyle}" />

                                            <chartingprimitives:EdgePanel Grid.Row="1"
                                                                          x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}">
                                                <Grid Canvas.ZIndex="-1" Style="{TemplateBinding PlotAreaStyle}" />
                                                <Border Canvas.ZIndex="10" BorderBrush="#FF919191" BorderThickness="1" />
                                            </chartingprimitives:EdgePanel>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </charting:Chart.Template>
                            <charting:Stacked100AreaSeries>
                                <charting:SeriesDefinition Title="Compiling" ItemsSource="{Binding StateDistributionSnapshots}" 
                                                           IndependentValuePath="Timestamp" DependentValuePath="Compiling"
                                                           DataPointStyle="{StaticResource CompilingDPStyle}"
                                                           DataShapeStyle="{StaticResource CompilingDSStyle}"/>
                                <charting:SeriesDefinition Title="No Compile Errors" ItemsSource="{Binding StateDistributionSnapshots}" 
                                                           IndependentValuePath="Timestamp" DependentValuePath="NoCompileErrors"
                                                           DataPointStyle="{StaticResource NoCompileErrorsDPStyle}"
                                                           DataShapeStyle="{StaticResource NoCompileErrorsDSStyle}"/>
                                <charting:SeriesDefinition Title="Compile Errors" ItemsSource="{Binding StateDistributionSnapshots}" 
                                                           IndependentValuePath="Timestamp" DependentValuePath="CompileErrors"
                                                           DataPointStyle="{StaticResource CompileErrorsDPStyle}"
                                                           DataShapeStyle="{StaticResource CompileErrorsDSStyle}"/>
                                <charting:SeriesDefinition Title="Red" ItemsSource="{Binding StateDistributionSnapshots}" 
                                                           IndependentValuePath="Timestamp" DependentValuePath="Red"
                                                           DataPointStyle="{StaticResource RedDPStyle}"
                                                           DataShapeStyle="{StaticResource RedDSStyle}"/>
                                <charting:SeriesDefinition Title="Green" ItemsSource="{Binding StateDistributionSnapshots}" 
                                                           IndependentValuePath="Timestamp" DependentValuePath="Green"
                                                           DataPointStyle="{StaticResource GreenDPStyle}"
                                                           DataShapeStyle="{StaticResource GreenDSStyle}"/>
                            </charting:Stacked100AreaSeries>
                        </charting:Chart>

                    </DockPanel>
                </TabItem>
                <TabItem x:Name="_reflectionBeaconView" Header="Parking Lot" DataContext="{Binding TDDRhythmBeaconVM}">
                    <DockPanel>
                        <WpfGauge:Gauge DockPanel.Dock="Left"
                                        Value="{Binding RunsPerHour}" MinValue="0" MaxValue="{Binding RphGaugeMaxScale}"
                                        MajorTickCount="{Binding RphGaugeMaxScale, Converter={StaticResource majorTicksCalculator}}"
                                        AutoScale="False" Width="100" Height="100"
                                        ValueFormat=" {0} rph">
                            <WpfGauge:Gauge.TickLabelStyle>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource rphToColorConverter}}"/>
                                </Style>
                            </WpfGauge:Gauge.TickLabelStyle>
                        </WpfGauge:Gauge>
                        <datavis:TreeMap 
                                         ItemsSource="{Binding GroupedAnnotations}">
                            <datavis:TreeMap.ItemDefinition>
                                <datavis:TreeMapItemDefinition ValuePath="Count">
                                    <DataTemplate>
                                        <Border Margin="0 0 5 5" BorderThickness="1" BorderBrush="Maroon"  x:Name="treemapitemContainer">
                                            <DockPanel>
                                                <TextBlock x:Name="treemapitemText"
                                                           Text="{Binding Text}" Foreground="White" TextWrapping="Wrap"
                                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </DockPanel>
                                            <ToolTipService.ToolTip>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Text}"/>
                                                    <TextBlock Text=" ("/>
                                                    <TextBlock Text="{Binding Count}"/>
                                                    <TextBlock Text=")"/>
                                                </StackPanel>
                                            </ToolTipService.ToolTip>
                                        </Border>
                                    </DataTemplate>
                                </datavis:TreeMapItemDefinition>
                            </datavis:TreeMap.ItemDefinition>
                            <datavis:TreeMap.Interpolators>
                                <datavis:SolidColorBrushInterpolator DataRangeBinding="{Binding Count}"
                                                                     TargetName="treemapitemContainer" TargetProperty="Background"
                                                                     From="Salmon" To="Red"/>
                                <datavis:DoubleInterpolator DataRangeBinding="{Binding Count}"
                                                            TargetName="treemapitemText" TargetProperty="FontSize"
                                                            From="10" To="18"/>
                            </datavis:TreeMap.Interpolators>

                        </datavis:TreeMap>
                    </DockPanel>


                </TabItem>
            </TabControl.Items>
        </TabControl>


        <!--<Button Content="_Click Me!" Name="button1" Click="button1_Click" />-->
    </DockPanel>
</UserControl>
